name: Build and Push to ECR

on:
  push:
    branches:
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: 837056842523.dkr.ecr.us-east-1.amazonaws.com/soltax

      - name: Build and Push Docker Images to ECR
        env:
          ECR_REGISTRY: 837056842523.dkr.ecr.us-east-1.amazonaws.com/soltax
        run: |
          SERVICES=$(docker-compose config --services)
          for SERVICE in $SERVICES; do
            IMAGE_NAME="$ECR_REGISTRY/$SERVICE:latest"
            if [ "$(docker-compose ps -q $SERVICE)" ]; then
              echo "Skipping $SERVICE because it's using an image from a registry"
            else
              # Pull the latest version of the image
              docker pull $IMAGE_NAME || true
              
              # If the image doesn't exist, build it using the service name and tag it with the ECR repository URL
              if ! docker images --quiet $SERVICE; then
                docker build -t $SERVICE .
                docker tag $SERVICE:latest $IMAGE_NAME
              fi
              
              # Push the image to the ECR registry
              docker push $IMAGE_NAME
            fi
          done
